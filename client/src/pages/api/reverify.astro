---
import {  getFirestoreData } from "./usefb";

const url = new URL(Astro.request.url);
const searchParams = url.searchParams;
const id = searchParams.get("code");
const time = searchParams.get("timestamp");
let oauthData, data, ne1,redirect: string="";
await getDiscordLoginUrl(id);
return Astro.redirect(redirect);
async function getDiscordLoginUrl(id: string | null = null) {
    if(id){
				ne1 = await dcreply(id);

				Astro.cookies.set("discord", JSON.stringify(ne1), {
					path: "/",
				});
				redirect = ne1 && (ne1.newuser == undefined || ne1.newuser == true)
					?("/welcome")
					:("/course");
			} else {
				console.log("No access token");
				redirect = ("/");
			}
		
}
async function dcreply(id: string) {
	var ne1 = await getFirestoreData(id);
	if (ne1) {
		delete ne1.JSON_discord_channel;
		delete ne1.JSON_discord_user;
		delete ne1.JSON_discord_cc_server;
        ne1.timestamp = time;
		return await ne1;
	}
}
---

<!doctype html>
<html lang="en">
	<head> </head>
	<body>
		<main>
			<div class="splash">
				<h1>Hello, Coders!</h1>
				<div class="splashbuttoncontainer">
					<a class="member" href="/buy">
						<span>Join the squad!</span>
					</a>
				</div>
				<div>
					<h2>OAuth Data</h2>
					<pre>{JSON.stringify(oauthData, null, 2)}</pre>
					<h2>Data[0]</h2>
					<pre>{data ? JSON.stringify(data[0], null, 2) : "Data not available"}</pre>
					<h2>Data[1]</h2>
					<pre>{data ? JSON.stringify(data[1], null, 2) : "Data not available"}</pre>
					<h2>Data[2]</h2>
					<pre>{data ? JSON.stringify(data[2], null, 2) : "Data not available"}</pre>
					<h2>Ne1</h2>
					<pre>{JSON.stringify(ne1, null, 2)}</pre>
					<h2>Redirect</h2>
					<pre>{redirect}</pre>
				</div>
			</div>
		</main>
	</body>
</html>
